/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/6xKLqcxPTM9
 */
import Link from "next/link"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { PopoverTrigger, PopoverContent, Popover } from "@/components/ui/popover"
import { JSX, SVGProps, useEffect } from "react"
import { supabase } from "@/components/utils/supabaseClient"
import { useState } from "react"
export function Navbar() {  
  const [balance, setBalance] = useState(0);

  useEffect(() => {
    const fetchData = async () => {
      let { data, error } = await supabase
        .from('researcherdata')
        .select('balance')
        .eq('id', '0');
      if (error) console.error('error', error);
      else if (data && data[0]) setBalance(data[0].balance);
    };
    fetchData();
  }, []);
  return (
    <nav className="flex flex-row items-center h-14 px-4 border-b bg-white/70 backdrop-blur-sm backdrop-filter justify-start gap-4 md:gap-6 dark:bg-gray-950 dark:bg-opacity-70/70 dark:backdrop-filter-none">
      <Link className="flex items-center gap-2 text-sm font-semibold" href="#">
        MediBlocks
      </Link>
      <div className="flex-1 min-w-0">
        <form className="w-full">
          <div>
            <Input
              className="font-normal peer h-10 text-base w-0 flex-1 min-w-0 text-center placeholder-gray-500 bg-white rounded-xl ring-0 w-full/1 dark:bg-gray-950 dark:placeholder-gray-400"
              placeholder="Search..."
              type="search"
            />
            <div>
            </div>
          </div>
        </form>
      </div>
      <Popover>
        <PopoverTrigger asChild>
          <Button className="peer group w-8 h-8 rounded-full" size="icon" variant="ghost">
            <BellIcon className="w-4 h-4 text-gray-500 group-[*]:text-gray-900 transition-colors" />
            <span className="sr-only">View notifications</span>
          </Button>
        </PopoverTrigger>
        <PopoverContent className="w-60 mt-1">
          <div />
          <div className="grid gap-2 p-2 text-xs">
            <div>You have a new message from Alice.</div>
            <div>Your file has been approved.</div>
            <div>You have 10 new orders.</div>
          </div>
        </PopoverContent>
      </Popover>
      <Popover>
        <PopoverTrigger asChild>
       
        </PopoverTrigger>
        <PopoverContent>
          <div />
          <div className="flex flex-col gap-1 p-4 text-sm">
            <div className="font-medium">Alice</div>
            <div className="text-xs text-gray-500 dark:text-gray-400">alice@example.com</div>
            <Button className="w-full text-sm" variant="outline">
              Upgrade
            </Button>
          </div>
          <div />
          <div>
            <UserIcon className="w-4 h-4 mr-2" />
            Profile
          </div>
          <div>
            <CogIcon className="w-4 h-4 mr-2" />
            Settings
          </div>
          <div>
            <SwitchCameraIcon className="w-4 h-4 mr-2" />
            Switch Organization
          </div>
          <div />
          <div>
            <LogOutIcon className="w-4 h-4 mr-2" />
            Logout
          </div>
          <SwitchCameraIcon className="navbar-icon" />
        </PopoverContent>
      </Popover>
      <Popover>
        <PopoverTrigger asChild>
          <Button className="peer group w-8 h-8 rounded-full" size="icon" variant="ghost">
            <LayoutGridIcon className="w-4 h-4 text-gray-500 group-[*]:text-gray-900 transition-colors" />
            <span className="sr-only">View projects</span>
          </Button>
        </PopoverTrigger>
        <PopoverContent className="w-60 mt-1">
          <div />
         {/*Display the balance and items brought here */}
          <div className="grid gap-2 p-2 text-xs">
            <div>Balance: ${balance}</div>
            <div>Items brought: 2</div>
          </div>
        </PopoverContent>
      </Popover>
    </nav>
  )
}


function SearchIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="11" cy="11" r="8" />
      <path d="m21 21-4.3-4.3" />
    </svg>
  )
}


function BellIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9" />
      <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0" />
    </svg>
  )
}


function UserIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2" />
      <circle cx="12" cy="7" r="4" />
    </svg>
  )
}


function CogIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12 20a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z" />
      <path d="M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z" />
      <path d="M12 2v2" />
      <path d="M12 22v-2" />
      <path d="m17 20.66-1-1.73" />
      <path d="M11 10.27 7 3.34" />
      <path d="m20.66 17-1.73-1" />
      <path d="m3.34 7 1.73 1" />
      <path d="M14 12h8" />
      <path d="M2 12h2" />
      <path d="m20.66 7-1.73 1" />
      <path d="m3.34 17 1.73-1" />
      <path d="m17 3.34-1 1.73" />
      <path d="m11 13.73-4 6.93" />
    </svg>
  )
}


function SwitchCameraIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M11 19H4a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h5" />
      <path d="M13 5h7a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-5" />
      <circle cx="12" cy="12" r="3" />
      <path d="m18 22-3-3 3-3" />
      <path d="m6 2 3 3-3 3" />
    </svg>
  )
}


function LogOutIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4" />
      <polyline points="16 17 21 12 16 7" />
      <line x1="21" x2="9" y1="12" y2="12" />
    </svg>
  )
}


function LayoutGridIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="7" height="7" x="3" y="3" rx="1" />
      <rect width="7" height="7" x="14" y="3" rx="1" />
      <rect width="7" height="7" x="14" y="14" rx="1" />
      <rect width="7" height="7" x="3" y="14" rx="1" />
    </svg>
  )
}
